#include<iostream>
#include<stdio.h>
#include<locale.h>
#include<math.h>
#include "Header.h"
#include<time.h>

using namespace std;

void main()
{
	setlocale(LC_ALL, "Russian");
	srand(time(NULL));

	int n;
	do {
		cout << "введите номер задания: ";
		cin >> n;
		switch (n) {
			//1.	Даны два массива, упорядоченных по возрастанию: А[n] и B[m]. Сформируйте массив C[n+m], состоящий из элементов
			//массивов А и В, упорядоченный по возрастанию (Массив С не должен сортироваться).
		case 1: {
			int a[5], b[8],c[13];
			massiv(a, 5, 1, 30, possitive);
			sort(a, 5, vozrastanie);
			print_massiv(a, 5);

			massiv(b, 8, 1, 30, possitive);
			sort(b, 8, vozrastanie);
			print_massiv(b, 8);

			stick_massive(a, b, 5, 8, c);
			print_massiv(c, 13);

		}break;


			//2.	Даны два массива : А[n] и B[m]. Необходимо создать третий массив, в котором нужно собрать общие элементы двух массивов.
		case 2: {
			int a[5], b[8], c[5];
			massiv(a, 5, 1, 10, possitive);
			print_massiv(a, 5);

			massiv(b, 8, 1, 10, possitive);
			print_massiv(b, 8);
			
			general_elements(a, 5, b, 8, c);
			print_massiv(c, 5);

		}break;

			//3.	Даны два массива : А[n] и B[m]. Необходимо создать третий массив, в котором нужно собрать элементы массива A, которые не включаются в B.
		case 3: {
			int a[5], b[8], c[13];
			massiv(a, 5, 1, 5, possitive);
			print_massiv(a, 5);

			massiv(b, 8, 1, 5, possitive);
			print_massiv(b, 8);

			different_elements(a, 5, b, 8, c);
			print_massiv(c, 5);
		}break;

			//4.	Даны два массива : А[n] и B[m]. Необходимо создать третий массив, в котором нужно собрать элементы массива B, которые не включаются в A.
		case 4: {
			int a[5], b[8], c[13];
			massiv(a, 5, 1, 30, possitive);
			print_massiv(a, 5);

			massiv(b, 8, 1, 30, possitive);
			print_massiv(b, 8);
		}break;

			//5.	Даны два массива : А[n] и B[m]. Необходимо создать третий массив, в котором нужно собрать элементы массивов A и B, которые не являются общими для них.
		case 5: {
			int a[5], b[8], c[13];
			massiv(a, 5, 1, 30, possitive);
			print_massiv(a, 5);

			massiv(b, 8, 1, 30, possitive);
			print_massiv(b, 8);
		}break;

			//1.	*Напишите функцию, которая принимает одномерный массив целых чисел и заполняет его случайными числами.
		case 6: {
			int a[10];
			massiv(a, 10, 1, 30, possitive);
			print_massiv(a, 10);

		}break;

			//2.	*Напишите функцию, которая принимает число и возвращает истину, если число четное и ложь, если нечетное.
		case 7: {
			int l;
			cout << "Введите число: ";
			cin >> l;
			if (even_num(l) == 1)
				cout << " истина" << endl;
			else
				cout << "ложь" << endl;

		}break;

			//3.	**Написать функцию, которая возвращает истину, если переданное число простое, и ложь, если не простое. Простое число – это число, которое делиться
			//ТОЛЬКО на 1 и на себя (2, 5, 7, 11 и т.д.).
		case 8: {
			int l;
			cout << "Введите число: ";
			cin >> l;
			if (prost(l) == 0)
				cout << "Число простое." << endl;
			else
				cout << " Число не явыляется простым." << endl;

		}break;

			//4.	***Число называется совершенным, если сумма всех его делителей равна ему самому. Напишите функцию поиска таких чисел во введенном интервале.
		case 9: {
			int a;
			cout << "введите число: ";
			cin >> a;
			if (perfect_number(a))
				cout << "число совершенное." << endl;

		}break;

			//5.	**Написать функцию, которая возвращает истину, если переданный параметр является алфавитно-цифровым и ложь, если не является.
		case 10: {

		}break;

			//6.	**Написать функцию, которая принимает одномерный массив целых чисел и возвращает значения максимального числа в этом массиве.
		case 11: {
			int b[8];
			massiv(b, 8, 1, 30, possitive);
			print_massiv(b, 8);
			cout << "максимальный элемент массива: " << max_num(b, 8) << endl;
		}break;

			//7.	**Напишите функцию, которая принимает три массива целых чисел. Выполнить поэлементное сложение элементов первых двух массивов, 
			//и результат занести в третий массив.
		case 12: {

			int a[5], b[5], c[5];
			massiv(a, 5, 1, 30, possitive);
			print_massiv(a, 5);

			massiv(b, 5, 1, 30, possitive);
			print_massiv(b, 5);

			sum_arr(a, b, c,5);
			print_massiv(c, 5);

		}break;
		
			//	8.	**Написать функцию, которая принимает целое шестизначное число и проверяет равна ли сумма первых трех цифр сумме последних трех
			//цифр(счастливый билет).Функция возвращает истину, если число счастливое(суммы равны) и ложь, если не счастливое(суммы не равны).
		case 13: {
			int a[6],k;
			massiv(a, 6, 1, 5, possitive);
			print_massiv(a, 6);
			k = happy_ticket(a, 6);
			
			if ( k== 1)
				cout << "Билет счастливый." << endl;
			else 
				cout << "Билет не является счастливым." << endl;
		}break;
		}
	} while (n > 0);
}